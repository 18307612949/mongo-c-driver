#ifndef FUTURE_VALUE_H
#define FUTURE_VALUE_H

#include <bson.h>
#include <mongoc.h>

{{ header_comment }}

{% for T in typedef_list %}{% if T.typedef %}
typedef {{ T.typedef }} {{ T.name }};{% endif %}{% endfor %}

typedef enum {
   future_value_no_type = 0,
{% for T in type_list %}   future_value_{{ T }}_type,
{% endfor %}
} future_value_type_t;

typedef struct _future_value_t
{
   future_value_type_t type;
   union {
{% for T in type_list %}      {{ T }} {{ T }}_value;
{% endfor %}
   };
} future_value_t;

future_value_t *future_value_new ();

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-function"
#endif

{% for T in type_list %}
void
future_value_set_{{ T }}(
   future_value_t *future_value,
   {{ T }} value);

{{ T }}
future_value_get_{{ T }} (
   future_value_t *future_value);
{% endfor %}

#ifdef __clang__
#pragma clang diagnostic pop
#endif

#endif /* FUTURE_VALUE_H */

